<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        3OIMAAAAAElFTkSuQmCC
</value>
  </data>
</root>